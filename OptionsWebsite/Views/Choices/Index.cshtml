@model IEnumerable<OptionsWebsite.Models.BCITModels.Choice>

@{
    ViewBag.Title = "Choices";
}

<h2>Choices</h2>
<label for="YearTerms">Year Term</label>
@Html.DropDownList("YearTerms", null, htmlAttributes: new { @class = "form-control" })
<label for="ReportType">Report Types</label>
@Html.DropDownList("ReportTypes", null, htmlAttributes: new { @class = "form-control" })
<button id="report" class="btn btn-secondary">Go</button>

<div id="reportdiv"></div>


<script>
    var colors = ["#9C27B0", "#F44336", "#9E9E9E", "#E91E63", "#2196F3", "#4CAF50", "#FFEB3B"];

    $(document).ready(function () {
        $("#report").click(function () {

            if( $("#ReportTypes").val() == "Details Report" ){
                $.ajax({
                    url: 'http://localhost:56503/api/choices',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data, textStatus, xhr) {
                        console.log(data);
                        getYearTerms(data);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log('Error in Operation');
                    }
                });
            } else if ($("#ReportTypes").val() == "Chart") {
                $.ajax({
                    url: 'http://localhost:56503/api/choices',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data, textStatus, xhr) {
                        console.log(data);
                        organize(data);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log('Error in Operation');
                    }
                });
            }
        });
    });
    function FilterData(data, yearTermData) {
        var yt = $("#YearTerms option:selected").text();
        var x = yt.split(' ')
        var term = x[1];
        var year = yt.match(/\d+/);
        var termId = 10;
        switch (term) {
            case "Winter":
                termId = 10;
                break;
            case "Spring/Summer":
                termId = 20;
                break;
            case "Fall":
                termId = 30;
                break;
            default:
                termId = 10;
        }
        var yearTermId = 0;
        $.each(yearTermData, function (i, val) {
            if (val.Year == year && val.Term == termId) {
                yearTermId = val.YearTermId;
                return false;
            }
        });
        var filtered = new Array();
        $.each(data, function (i, val) {
            if (val.YearTermId == yearTermId) {
                filtered.push(val);
            }

        });

        console.log(filtered);
        getOptions(filtered);

    }

    function GenerateReport(data, options, target) {
        
        var optionsArray = {};
        $.each(options, function (i, value) {
            optionsArray[value.OptionId] = value.Title;
        });
          
        if (data != null) {
            var strResult = "<table class='table'><tr><th>Student Number</th><th>First Name</th><th>Last Name</th><th>Selection Date</th><th>First Choice</th><th>Second Choice</th><th>Third Choice</th><th>Fourth Choice</th></tr>";
            
            $.each(data, function (i, val) {
                strResult += "<tr>" +
                    "<td>" + val.StudentId + "</td>" +
                    "<td>" + val.StudentFirstName + "</td>" +
                    "<td>" + val.StudentLastName + "</td>" +
                    "<td>" + val.SelectionDate + "</td>" +
                    "<td>" + optionsArray[val.FirstChoiceOptionId] + "</td>" +
                    "<td>" + optionsArray[val.SecondChoiceOptionId] + "</td>" +
                    "<td>" + optionsArray[val.ThirdChoiceOptionId] + "</td>" +
                    "<td>" + optionsArray[val.FourthChoiceOptionId] + "</td>" +
                    "</tr>";

            });


            strResult+="</table>";
            $(target).html(strResult);
        }
        else {
            $(target).html("No Results To Display");
        }
    }

    function getOptions(filtered) {
        $.ajax({
            url: 'http://localhost:56503/api/options',
            type: 'GET',
            dataType: 'json',
            success: function (data, textStatus, xhr) {
                console.log(data);
                GenerateReport(filtered, data, "#reportdiv");
               
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Operation');
            }
        });

    }

    function getYearTerms(choicedata) {
        $.ajax({
            url: 'http://localhost:56503/api/yearterms',
            type: 'GET',
            dataType: 'json',
            success: function (data, textStatus, xhr) {
                console.log(data);
                FilterData(choicedata, data);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Operation');
            }
        });
    }

    function getOptionsData(data) {
        var optionsData = {};
        for (var i = 0; i < data.length; i++) {
            optionsData[data[i].OptionId] = data[i].Title;
        }
        return optionsData;

    }

    function organize(choicesData) {
        $.ajax({
            url: 'http://localhost:56503/api/options',
            type: 'GET',
            dataType: 'json',
            success: function (data, textStatus, xhr) {

                var optionsData = getOptionsData(data);

                var firstChoiceData = {0:0, 1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0, 8:0, 9:0, 10:0};
                var secondChoiceData = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0 };
                var thirdChoiceData = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0 };
                var fourthChoiceData = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0 };

                for (var i = 0; i < choicesData.length; i++) {

                    if (choicesData[i].YearTermId == $("#YearTerms").val()) {
                        //first choice
                        if (isNaN(firstChoiceData[choicesData[i].FirstChoiceOptionId])) {
                            firstChoiceData[choicesData[i].FirstChoiceOptionId] = 1;
                        } else {
                            firstChoiceData[choicesData[i].FirstChoiceOptionId]++
                        }

                        //second choice
                        if (isNaN(secondChoiceData[choicesData[i].SecondChoiceOptionId])) {
                            secondChoiceData[choicesData[i].SecondChoiceOptionId] = 1;
                        } else {
                            secondChoiceData[choicesData[i].SecondChoiceOptionId]++
                        }

                        //third choice
                        if (isNaN(thirdChoiceData[choicesData[i].ThirdChoiceOptionId])) {
                            thirdChoiceData[choicesData[i].ThirdChoiceOptionId] = 1;
                        } else {
                            thirdChoiceData[choicesData[i].ThirdChoiceOptionId]++
                        }

                        //fourth choice
                        if (isNaN(fourthChoiceData[choicesData[i].FourthChoiceOptionId])) {
                            fourthChoiceData[choicesData[i].FourthChoiceOptionId] = 1;
                        } else {
                            fourthChoiceData[choicesData[i].FourthChoiceOptionId]++
                        }
                    }
                }
                $(".choice-chart").remove();

                $("#chartdiv").append("<h3 class='choice-chart'>Choice 1</h3>");
                $("#chartdiv").append("<canvas id='choice-chart-1' class='choice-chart' width='400' height='400'></canvas>")
                $("#chartdiv").append("<h3 class='choice-chart'>Choice 2</h3>");
                $("#chartdiv").append("<canvas id='choice-chart-2' class='choice-chart' width='400' height='400'></canvas>")
                $("#chartdiv").append("<h3 class='choice-chart'>Choice 3</h3>");
                $("#chartdiv").append("<canvas id='choice-chart-3' class='choice-chart' width='400' height='400'></canvas>")
                $("#chartdiv").append("<h3 class='choice-chart'>Choice 4</h3>");
                $("#chartdiv").append("<canvas id='choice-chart-4' class='choice-chart' width='400' height='400'></canvas>")

                var ctx1 = document.getElementById("choice-chart-1").getContext("2d");
                var ctx2 = document.getElementById("choice-chart-2").getContext("2d");
                var ctx3 = document.getElementById("choice-chart-3").getContext("2d");
                var ctx4 = document.getElementById("choice-chart-4").getContext("2d");

                var choiceChart1 = new Chart(ctx1).Pie(getFormattedChartData(firstChoiceData, optionsData), options);
                var choiceChart2 = new Chart(ctx2).Pie(getFormattedChartData(secondChoiceData, optionsData), options);
                var choiceChart3 = new Chart(ctx3).Pie(getFormattedChartData(thirdChoiceData, optionsData), options);
                var choiceChart4 = new Chart(ctx4).Pie(getFormattedChartData(fourthChoiceData, optionsData), options);


               
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Operation');
            }
        });

        function getFormattedChartData(data, optionsData) {
            var result = [];
            for (variable in data) {
                result.push({
                    value: data[variable],
                    color: colors[variable],
                    label: optionsData[variable]
                })
            }

            return result;
        }
       
    }




    var options = {
        //Boolean - Whether we should show a stroke on each segment
        segmentShowStroke: true,

        //String - The colour of each segment stroke
        segmentStrokeColor: "#fff",

        //Number - The width of each segment stroke
        segmentStrokeWidth: 2,

        //Number - The percentage of the chart that we cut out of the middle
        percentageInnerCutout: 50, // This is 0 for Pie charts

        //Number - Amount of animation steps
        animationSteps: 100,

        //String - Animation easing effect
        animationEasing: "easeOutBounce",

        //Boolean - Whether we animate the rotation of the Doughnut
        animateRotate: true,

        //Boolean - Whether we animate scaling the Doughnut from the centre
        animateScale: false,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

    }

</script>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SecondOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ThirdOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FourthOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YearTerm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentLastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectionDate)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstOption.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecondOption.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ThirdOption.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FourthOption.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearTerm.YearTermId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SelectionDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ChoiceId }) |
                @*@Html.ActionLink("Details", "Details", new { id=item.ChoiceId }) |*@
                @Html.ActionLink("Delete", "Delete", new { id = item.ChoiceId })
            </td>
        </tr>
    }


</table>

<div id="chartdiv">

</div>
